<?php
	/**
	 *  js scripts generated by PHP
	 *  
	 *  Scripts are inserted based on current page.
	 *  
	 *  
	 *  
	 *  When the user comes to a page, initialize() is called. The session might be in the following possible states, decided by calling 'initialize_geo_data()':
	 *  1) Geo data may be available in cookies, based on which further initialization are simply made by calling callback to 'initialize_geo_data()'.
	 *  2) Geo data is unavailable in cookies. In this case, the browser asks the user whether or not to allow the script access location data. If
	 *     user gives permission, geo data is obtained and cookies are set. If not, the location_scroll is opened by calling 'open_location_scroll()'.
	 *     On saving the location, callback of 'initialize_geo_data()' is called.
	 */
	
	require_once("./include/config.inc.php");
	require_once("./include/lib.inc.php");
	require_once("./include/session.inc.php");
	require_once("./include/connection.inc.php");
	require_once("./include/flags.inc.php");
	
	//ob_start();	// Start output buffering
?>

<script type="text/javascript">

<?php

/**
 *   ------------------------------------------------- GENERAL PURPOSE JAVASCRIPT ---------------------------------------------
 *                                  					(required for all pages)
 */

?>

<?php 
/**
 *  ~~~~~~~~~~~~~~~~~~~~~~ ADD GLOBAL VARIABLES HERE ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~             
 */
?>

var lat;	
var lng;
var user_place;		// Textual description of current location
var map;
var geocoder;
var marker;
<?php 
/**
 *  ~~~~~~~~~~~~~~~~~~~~~~ ADD EVENT REGISTRATIONS HERE ~~~~~~~~~~~~~~~~~~~~~~~~~~~~            
 */
?>

// Clear input field on click
$("#loc_change_btn").click(function(){
	$("#location2").attr('disabled',false);
	$("#location2").val('').focus();
	$(this).css("display","none");
	$("#loc_save_btn").css("display","inline");
});

// Close location_scroll on click
$("#loc_scroll_close").click(function(){
	close_location_scroll();
});

// Select text in input field
$("#location2").click(function(){
	$(this).select();
});

// Dunno what this does
$(".pswd_check2").simpletip({
   content: 'My Simpletip',
   fixed: true
});

<?php  //File: main_menu.php ?>
//Shows location set scroll
$("#set_location").click(function(){
	open_location_scroll("Your current location:",false,function(){});	// Open scroll in 'show' mode

});

// Keyboard shortcuts
$(document).bind('keydown',function(event){
	if(event.which==27)
	{
		if($("#location_scroll").is(":visible"))
		{
			close_location_scroll();
		}
	}
});


<?php

/* Script for pop_up.php */
 
//Pop-up scripts are required only if user not logged in
if(!is_logged_in())
{
	
?>
	$("#signup_name").blur(function(){
		var name=$("#signup_name").val();
		
		if(name!='')
		{
			
		}
	});
	$("#signup_pswd2").blur(function(){
		var pswd1=$("#signup_pswd1").val();
		var pswd2=$("#signup_pswd2").val();
		
		if( pswd1!='<?php echo SIGNUP_PSWD1_DEFAULT_VAL;?>' || pswd2!='<?php echo SIGNUP_PSWD2_DEFAULT_VAL?>' )
		{
			//Either of the two passwords has been filled
			if(pswd1!=pswd2)
			{
				$(".pswd_check").html("<img class='pswd_check2' src='<?php echo BASE_URL_2;?>images/exclamation_mark.png' title='Passwords do not match'/>");
			}
			else
			{
				$(".pswd_check").html("<img class='pswd_check2' src='<?php echo BASE_URL_2;?>images/tick.png' title='Passwords match'/>");
			}
		}
	});
	
	$("#signup_email").blur(function(){
		var email=$("#signup_email").val();
		var pattern=/^[_a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,4})$/
		if(email=="")
		{
			//Clear any check marks
			$("#email_check").html("");
		}
		else if(email!="" && !(email.match(pattern)) )
		{
			console.log("email="+email);
			console.log("Match:"+email.match(pattern))
			//Invalid email address
			$("#email_check").html("<img id='email_check2' src='<?php echo BASE_URL_2;?>images/exclamation_mark.png' title='Invalid email address'/>");		
		}
		else if( email!="" && (email.match(pattern)) )
		{
			//Valid email address
			$("#email_check").html("<img id='email_check2' src='<?php echo BASE_URL_2;?>images/tick.png' title='Valid email address'/>");
		}
	});
	
	$("#signup_age").blur(function(){
		var age=$("#signup_age").val();
		if(age=="")
		{
			//Clear any check marks
			$("#age_check").html(" ");
		}
		else if( isNaN(age) )
		{
			console.log(age);
			//Invalid age
			$("#age_check").html("<img id='age_check2' src='<?php echo BASE_URL_2;?>images/exclamation_mark.png' title='Age is not a number'/>");	
		}
	});
	
	$("#signup_submit").click(function(){
		$("#signup_preloader").css('display','inline');
		$.ajax({
		url: "<?php echo BASE_URL_2;?>ajax/ajax_signup.php",
		data: $('#signup_form').serializeArray(),
		success: function(data1){
			$("#signup_preloader").css('display','none');
			$(".input1").removeClass('has_error');
			$(".err").html('');
		
			var json=eval('('+data1+')');
			//alert(json.status);
			if(json.status=='failure')
			{
				for(i=0;i<json.err_code.length;i++)
				{
					if(json.err_code[i]==<?php echo SIGNUP_PSWD_MISMATCH;?>)
					{
						$("#pswd_err").html("Passwords don't match.");
						$("#signup_pswd1,#signup_pswd2").addClass('has_error');
						$(".pswd_check").html("<img class='pswd_check2' src='<?php echo BASE_URL_2;?>images/exclamation_mark.png' title='Passwords do not match'/>");
					}
					else if(json.err_code[i]==<?php echo SIGNUP_AGE_NAN;?>)
					{
						$("#age_err").html("Age must be numeric.");
						$("#signup_age").addClass('has_error');
					}
					else if(json.err_code[i]==<?php echo SIGNUP_AGE_INVALID;?>)
					{
						$("#age_err").html("You must be <?php echo MIN_AGE;?> or older to signup.");
						$("#signup_age").addClass('has_error');
						$("#age_check").html("<img id='age_check2' src='<?php echo BASE_URL_2;?>images/exclamation_mark.png' title='You must be <?php echo MIN_AGE;?> or older to signup.'/>");	
					}
					else if(json.err_code[i]==<?php echo SIGNUP_EMAIL_INVALID;?>)
					{
						$("#email_err").html("Invalid email address.");
						$("#signup_email").addClass('has_error');
						$("#email_check").html("<img id='email_check2' src='<?php echo BASE_URL_2;?>images/exclamation_mark.png' title='Invalid email address'/>");	
					}
					else if(json.err_code[i]==<?php echo SIGNUP_EMAIL_DUPLICATE;?>)
					{
						$("#email_err").html("Email address already registered.");
						$("#signup_email").addClass('has_error');
						$("#email_check").html("<img id='email_check2' src='<?php echo BASE_URL_2;?>images/exclamation_mark.png' title='Email address already registered'/>");	
					}
					else if(json.err_code[i]==<?php echo SIGNUP_USERNAME_DUPLICATE;?>)
					{
						$("#name_err").html("Username already taken.");
						$("#signup_name").addClass('has_error');
					}
					else if(json.err_code[i]==<?php echo SIGNUP_TERMS_DISAGREE;?>)
					{
						$("#terms_err").html("You must agree to terms.");
					}
					else if(json.err_code[i]==<?php echo SIGNUP_FORM_INCOMPLETE;?>)
					{
						$("#error_display").html("Please fill out the form completely.");
					}
				}
					
			}
			else if(json.status=='success')
			{
				// Success...go to home
				window.location.href='<?php echo $_SESSION["current_page"];?>';
			}
		}
	});
		
	});
	
	$("#login_btn").click(function(){
		$(".err2").html();
		var email=$('#signin_email').val();
		var pswd=$('#signin_pswd').val();
			
		if(email=='<?php echo SIGNIN_EMAIL_DEFAULT_VAL;?>')
		{
			$("#email_err2").html("Enter email address.");
			$("#signin_email").addClass('has_error');
		}
		
		if(pswd=='<?php echo SIGNIN_PSWD_DEFAULT_VAL;?>')
		{
			$("#pswd_err2").html("Enter password.");
			$("#signin_pswd").addClass('has_error');
		}
		
		if( email!='<?php echo SIGNIN_EMAIL_DEFAULT_VAL;?>' && pswd!='<?php echo SIGNIN_PSWD_DEFAULT_VAL;?>')
		{
		$("#signin_preloader").css("display","inline");
		$.ajax({
		url: "<?php echo BASE_URL_2;?>ajax/ajax_login.php",
		data: {'signin_email':email,'signin_pswd':pswd},
		success: function(data1){
			$("#signin_preloader").css("display","none");
			var json=eval('('+data1+')');
			//alert(json.status);
			if(json.status=='success')
			{
				window.location.href='<?php echo $_SESSION["current_page"];?>';
			}
			else if(json.status=='failure')
			{
				console.log('here');
				if(json.err_code==<?php echo SIGNIN_VALIDATION_ERR; ?>)
				{
					$("#login_error_display").html('Email and password did not match.');
				}
				else if(json.err_code==<?php echo SIGNIN_FORM_INCOMPLETE; ?>)
				{
					$("#login_error_display").html('Please enter email and password.');
				}
			} 
		}
		});
		}
	});

<?php

}	// End of pop-up scripts (if(!is_logged_in()))
?>


<?php 
/**
 *  ~~~~~~~~~~~~~~~~~~~~~~ ADD FUNCTIONS HERE ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 */
?>
function like(eid,flag,context)
	{

		if(eid<0)
		{
			// user not logged in
			if(flag==<?php echo ACTION_LIKE;?>)
			{
				alert("Login to like this item");
			}
			else
			{
				alert("Login to dislike this item");
			}
		}
		else if(flag==<?php echo ACTION_LIKE;?>)
		{
			$.ajax({
				url:'<?php echo BASE_URL_2;?>ajax/ajax_like.php',
				data:{'eid':eid},
				success:function(data){
				//alert(data);
					if(data=='<?php echo SUCCESS;?>' || data == '<?php echo SUCCESS2;?>')
					{
						// Like success
						// Change icons
						
						$(context).html("<img src='<?php echo BASE_URL_2;?>images/icon_thumb_up_shadow.png' />");
						$('a[name=dislike_'+eid+']').html("<img src='<?php echo BASE_URL_2;?>images/icon_thumb_down.png' />");
						
						// Update counts
						initial_like = parseInt($('#initial_like_'+ eid).val(),10);
						initial_dislike = parseInt($('#initial_dislike_'+ eid).val(),10);
						new_likes = initial_like+1;
						if(data=='<?php echo SUCCESS;?>') new_dislikes = initial_dislike;
						else new_dislikes = initial_dislike -1;
						like_width= Math.floor(1+40*new_likes/(new_likes+new_dislikes+1));
						dislike_width = Math.floor(1+40*new_dislikes/(new_likes+new_dislikes+1));
						$('#like_'+eid).html('<div style="width:'+like_width+'px; background:#3db54a; height:6px; float:left;"></div><br>'+ new_likes +'<input type="hidden" id="initial_like_'+eid+'" value="'+new_likes+'">');
						$('#dislike_'+eid).html('<div style="width:'+dislike_width+'px; background:#ed2224; height:6px; float:left;"></div><br>'+ new_dislikes +'<input type="hidden" id="initial_dislike_'+eid+'" value="'+new_dislikes+'">');
						
					}
					else
					{
						// Some error
						switch(data)
						{
							case '<?php echo DB_ERROR;?>': alert("Database error"); break;
							case '<?php echo INSUFFICIENT_PARAMS_ERROR;?>': alert("Insufficient parameters error"); break;
							case '<?php echo NO_SESSION_EXISTS_ERROR;?>': alert("You need to login to like this."); break;
							case '<?php echo DUPLICATE_LIKE;?>': /* Do nothing */ break;
						}
					}
				}
			});
		}
		else if(flag==<?php echo ACTION_DISLIKE;?>)
		{
			$.ajax({
				url:'<?php echo BASE_URL_2;?>ajax/ajax_dislike.php',
				data:{'eid':eid},
				success:function(data){
				//alert(data);
					if(data=='<?php echo SUCCESS;?>' || data == '<?php echo SUCCESS2;?>')
					{
						// Dislike succcess
						// Change icons
						$(context).html("<img src='<?php echo BASE_URL_2;?>images/icon_thumb_down_shadow.png' />");
						$('a[name=like_'+eid+']').html("<img src='<?php echo BASE_URL_2;?>images/icon_thumb_up.png' />");
						
						// Update counts
					// Update counts
						// Update counts
						initial_like = parseInt($('#initial_like_'+ eid).val(),10);
						initial_dislike = parseInt($('#initial_dislike_'+ eid).val(),10);
						new_dislikes = initial_dislike+1;
						if(data=='<?php echo SUCCESS;?>') new_likes = initial_like;
						else new_likes = initial_like -1;
						like_width= Math.floor(1+40*new_likes/(new_likes+new_dislikes+1));
						dislike_width = Math.floor(1+40*new_dislikes/(new_likes+new_dislikes+1));
						$('#like_'+eid).html('<div style="width:'+like_width+'px; background:#3db54a; height:6px; float:left;"></div><br>'+ new_likes +'<input type="hidden" id="initial_like_'+eid+'" value="'+new_likes+'">');
						$('#dislike_'+eid).html('<div style="width:'+dislike_width+'px; background:#ed2224; height:6px; float:left;"></div><br>'+ new_dislikes +'<input type="hidden" id="initial_dislike_'+eid+'" value="'+new_dislikes+'">');
					}
					else
					{
						switch(data)
						{
							case '<?php echo DB_ERROR;?>': alert("Database error"); break;
							case '<?php echo INSUFFICIENT_PARAMS_ERROR;?>': alert("Insufficient parameters error"); break;
							case '<?php echo NO_SESSION_EXISTS_ERROR;?>': alert("You need to login to like this."); break;
							case '<?php echo DUPLICATE_LIKE;?>': /* Do nothing */; break;
						}
					}
				}
			});
		}
	}
	
function setLocationCookie(_lat,_lng,_place)
{
	set_cookie("latitude",_lat,7);	// Set for 7 days
	set_cookie("longitude",_lng,7);
	set_cookie("user_place",_place,7);
}
function follow(id,context)
{
	if(id==-1)
	{
		alert('Login to follow this user');
	}
	else
	{
		$(context).removeClass().addClass('follow_inactive');	// Make button inactive
		$(context).attr('onclick','');	// Disable on-click event
		$.ajax({
			url: "<?php echo BASE_URL_2;?>ajax/ajax_follow.php",
			data: {'id':id},
			success: function(data){
				if(data=='<?php echo USER_FOLLOWED;?>')
				{
					$(context).removeClass().addClass('unfollow');
					//alert('User Followed');
				}
				else if(data=='<?php echo USER_UNFOLLOWED;?>')
				{
					$(context).removeClass().addClass('follow');
					//alert('User Unfollowed');
				}
				else
				{
					// Some error has occurred
					var msg;
					switch(data)
					{
						case '<?php echo DB_ERROR;?>': msg='Database error.'; break;
						case '<?php echo SEARCH_ERROR;?>': msg='User does not exist.'; break;
						case '<?php echo DB_UPDATE_ERROR;?>': msg='Database update error.'; break;
						case '<?php echo SELF_FOLLOW_ERROR;?>': msg='You cannot follow yourself.'; break;
						case '<?php echo INSUFFICIENT_PARAMS_ERROR;?>': msg='Insufficient parameters.'; break;
						case '<?php echo NO_SESSION_EXISTS_ERROR;?>': msg='No user logged in.'; break;
					}
					alert(msg);
				}
			}
		});
	}
}	// End of follow


/**
 * All initialisation done here
 */
var countryRestrict = { 'country': 'in' };
function initialize()
{
	/* Initializations that do not require geo data */
	
	// Required if user does not allow browser to provide geo data
	
	/*var autocomplete_home = new google.maps.places.Autocomplete(document.getElementById("food_place"), {
				componentRestrictions: countryRestrict
			});
	*/
	// Add listener for 'autocomplete'
	google.maps.event.addListener(autocomplete_home, 'place_changed', function() 
		{
			/* This is called whenever an autocomplete item is clicked */
			
			var place_home = autocomplete_home.getPlace();
	        if (!place_home.geometry) {
	          alert('Place not found');		// CHANGE THIS !
	          return;
	        }
			  $('#food_lat').val(place_home.geometry.location.lat());
			  $('#food_lng').val(place_home.geometry.location.lng());
			  $('#food_place_name').val(place_home.name);
		});
		
		
	var autocomplete = new google.maps.places.Autocomplete(document.getElementById("location2"), {
				componentRestrictions: countryRestrict
			});

	// Add listener for 'autocomplete'
	google.maps.event.addListener(autocomplete, 'place_changed', function() 
		{
			/* This is called whenever an autocomplete item is clicked */
			
			var place = autocomplete.getPlace();
	        if (!place.geometry) {
	          alert('Place not found');		// CHANGE THIS !
	          return;
	        }
	
	        // If the place has a geometry, then present it on a map.
	        if (place.geometry.viewport) {
	          map.fitBounds(place.geometry.viewport);
	        } else {
	          map.setCenter(place.geometry.location);
	          map.setZoom(10);  // Why 10? Because it looks good.
	        }
	
	        marker.setPosition(place.geometry.location);
		});

	

	/* Initialize geo data. Initializations that require geo data must be placed within the callback */
	initialize_geo_data(function(){
		
		/* Geo data is now available in cookies 'longitude', 'latitude' and 'user_data' */
		
		$("#location2").val(get_cookie("user_place"));

		// Page specific initializations
		<?php
			if($TITLE=='home')
			{
				echo 'home_initialize();';
			}
		?>
		
			
	});
}	// End of initialize




/* Geodata must be obtained before all initializations */
function initialize_geo_data(callback)
{
	// Initialize geocoder object
	geocoder = new google.maps.Geocoder();
	
	// Get user's location for cookie
	lat=get_cookie('latitude');
	lng=get_cookie('longitude');
	user_place=get_cookie('user_place');

	//alert(lat);
	
	if(!lat || !lng || !user_place)
	{
		//Get user location
		if (navigator.geolocation) {
		navigator.geolocation.getCurrentPosition(showPosition,showError);
		}
		
	}
	else
	{
		callback();
	}
	function showPosition(position){
	
			/* If user gives location permission */
			lat=position.coords.latitude;
			lng=position.coords.longitude;
			reverse_geocode(lat,lng,function(data){		// Get user place name
				if(data)
				{
					user_place=data;
				}
				else
				{
					user_data='Unknown location';
				}
				setLocationCookie(lat,lng,user_place);
				
				callback();		// callback function is called only after all geo data is initialized
			});
			
		}
	function showError(error){
			
			/* If user denies location permission....ask him to set location on his own */
			open_location_scroll("Enter you location:",true,function(){
				close_location_scroll();
				callback();
			});
		}
}


/**
 * Returns the best matching reverse geocoded string to the function 'callback'.
 */
function reverse_geocode(latitude, longitude, callback) 
{
    var latlng = new google.maps.LatLng(latitude, longitude);
    geocoder.geocode({'latLng': latlng}, function(results, status) {
      if (status == google.maps.GeocoderStatus.OK)
      {
        if (results[1])
        {
            callback(results[1].formatted_address);
        }
        else
          callback(false);
      }
      else
      {
        callback(false);
      }
    });
 }

/* Opens location scroll, asks user for input and calls the option callback after the location has been set.
 *
 * @param msg msg to display in scroll
 * @param editMode (true or false) Whether to open scroll in 'edit' mode or 'show' mode (Default mode is 'edit')
 * @param callback function called once location is set [ only for edit mode ]
 * 
 */
function open_location_scroll(msg,editMode,callback)
{
	// Set message
	$("#location_scroll_msg").html(msg);
	// Open scroll
	$("#location_scroll").slideDown();

	/* Map is initialized when scroll is opened for the first time */
	if(!map)
	{
		if(!get_cookie('latitude') || !get_cookie('longitude') || !get_cookie('user_place') )
		{
			latlng=latlng=new google.maps.LatLng(0,0);
		}
		else
		{
			latlng=new google.maps.LatLng(get_cookie('latitude'),get_cookie('longitude'));
		}
		
		var mapOptions ={ center:latlng , zoom: 10, mapTypeId: google.maps.MapTypeId.ROADMAP };
		map = new google.maps.Map(document.getElementById("location_map"),mapOptions);
		
		// Initialize 'marker' and set its position !
		marker = new google.maps.Marker({ map: map });
		marker.setVisible(true);
		marker.setPosition(latlng);
	}

	// For map to render properly in a previously hidden div
	google.maps.event.trigger(map, 'resize');

	$("#loc_save_btn").click(function(){
		console.log("save button clicked..");
		lat=marker.getPosition().lat();
		lng=marker.getPosition().lng();
		user_place=$("#location2").val();

		if(user_place=="")
		{
			
		}
		else
		{
			setLocationCookie(lat,lng,user_place);	// Store in a cookie

			$("#location2").val();
			$("#location2").attr('disabled',true);
			$(this).hide();
			$("#loc_change_btn").show();

			//home_get_popular_items();		// Reload popular items for new location
			callback();		// Call callback after location is set
		}
	});
	
	if(editMode)
	{
		console.log("Location scroll opened in edit mode...");
		$("#location2").attr('disabled',false).val("").focus();	// Enable input field, clear and get focus
		$("#loc_change_btn").hide();		// Hide 'Change' button
		$("#loc_save_btn").show();			// Show 'Save' button
		
	}
	else	// 'Show' mode
	{
		$("#location2").val(get_cookie('user_place'));
		$("#location2").attr('disabled',true);	// Disable input field
		$("#loc_change_btn").show();	// Show 'Change' button
		$("#loc_save_btn").hide();		// Hide 'Show' button
	}
}

function close_location_scroll()
{
	$("#location_scroll").slideUp();
}



<?php 
	/** 
	 *  ------------------------------- HOME PAGE scripts -------------------------------------
	 */
	if($TITLE=='home')
	{
?>
/* Called from main 'initialize' function */
function home_initialize()
{
	// Get list of popular items based on current location
	console.log("In home initialize...");
	//home_get_popular_items();
}

/*
 * Populate home page with popular dishes close to current location of user.
 * Must be called each time location is changed.
 */
function home_get_popular_items()
{
	$("#most_pop_food").html("<center>Loading popular items...<br/><img src='<?php echo BASE_URL_2;?>images/preloader_yellow.gif' /></center>");
	$.ajax({
		url: "<?php echo BASE_URL_2;?>ajax/ajax_popular_results.php",
		success: function(data){
			json=$.parseJSON(data);
			if(json.status==<?php echo SUCCESS;?>)
			{
				$("#most_pop_food").html(unescape(json.output));
			}
			else if(json.status==<?php echo SEARCH_ERROR; ?>)
			{
				$("#most_pop_food").html("<br/><center>Sorry! No results for "+get_cookie('user_place')+" yet.</center>");
			}
		}
	});
}
<?php 
	}
?>

</script>
<?php
	//$output=ob_get_contents();
	////ob_end_clean();
	//$output=preg_replace('/\s\s+/', ' ', $output);	//Remove unnecessary white space
	//echo $output;
?>